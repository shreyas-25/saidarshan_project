{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.service.ts","webpack:///./src/app/admin/bookedslots/bookedslots.component.css","webpack:///./src/app/admin/bookedslots/bookedslots.component.html","webpack:///./src/app/admin/bookedslots/bookedslots.component.ts","webpack:///./src/app/admin/getlist/getlist.component.css","webpack:///./src/app/admin/getlist/getlist.component.html","webpack:///./src/app/admin/getlist/getlist.component.ts","webpack:///./src/app/admin/getuser/getuser.component.css","webpack:///./src/app/admin/getuser/getuser.component.html","webpack:///./src/app/admin/getuser/getuser.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/booking/booking.component.css","webpack:///./src/app/booking/booking.component.html","webpack:///./src/app/booking/booking.component.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/emtr.service.ts","webpack:///./src/app/forgetpass/forgetpass.component.css","webpack:///./src/app/forgetpass/forgetpass.component.html","webpack:///./src/app/forgetpass/forgetpass.component.ts","webpack:///./src/app/getbookedlist/getbookedlist.component.css","webpack:///./src/app/getbookedlist/getbookedlist.component.html","webpack:///./src/app/getbookedlist/getbookedlist.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/setpass/setpass.component.css","webpack:///./src/app/setpass/setpass.component.html","webpack:///./src/app/setpass/setpass.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/userdashboard/userdashboard.component.css","webpack:///./src/app/userdashboard/userdashboard.component.html","webpack:///./src/app/userdashboard/userdashboard.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* .container {\\n    position: initial; \\n    width: 100%;\\n    height: 5%; \\n    margin:auto;\\n  }\\n  \\n   .content {\\n    position: inherit; \\n    bottom: 0; \\n    background: rgb(0, 0, 0); \\n    background: rgba(0, 0, 0, 0.5); \\n    color: #f1f1f1; \\n    width: 100%; \\n    padding:0px; \\n  } */\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <title>Document</title>\\n</head>\\n<body>\\n    <div class=\\\"container\\\">\\n        <img src=\\\"../../assets/images/wp3991276-sai-baba-wallpapers.jpg\\\" alt=\\\"Avatar\\\" class=\\\"avatar\\\" style=\\\"align-items: center; margin-left: 23%\\\"  width=\\\"50%\\\" height=\\\"300px\\\">\\n      </div>\\n      <br><br>    \\n  <div style=\\\"color:black\\\">\\n  <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Shirdi, a small rural town in the Rahata taluka of Ahmednagar district in the Maharashtra state of India.\\n     Shirdi is a secular place where all religions are treated as one & a belief in the power of Faith & Patience is foremost. \\n     A place where all heads bow down in prayer, where faith prevails, where hopes are built, where patience pays, and where infinite joy and everlasting contentment abound. \\n     Such is the glory of the place which belongs to the Holy Saint, a true repository of wisdom, who pleased all with pious equality and gifted mankind ornaments of humanity and peace by saying \\\"SABKA MALIK EK\\\". \\n     The footprints of Saibaba have made this town a holy place. Millions of devotees continuously flock here from all over India and abroad. Situated on the Ahmednagar-Manmad highway.\\n\\n    Shirdi can be reached from the new railway station at Sainagar; Manmad-Junction, Kopargaon and Nagarsul are other nearby railway stations on the Central Railway.\\n     Shirdi is where the holy soul of Shri Satchidanand Sadguru Sainath Maharaj - affectionately known as “Saibaba” rests today. Shri Saibaba appeared at Shirdi in his human incarnation.\\n      For 60 years Baba served mankind and preached his precious teachings to the world from here, and then went for contemplation (Samadhi) in Shirdi itself. \\n      The footprints and the deeds of Saibaba have turned this small town into a unique holy place for people of all castes, creeds and religions. Saibaba delivered the universal slogan of \\\"Shraddha - Saburi\\\", i.e. Faith and Patience for everyone, from here itself.\\n       The place of his 'Samadhi' has become a centre-point for innumerable devotees, infusing them with the joy of life. While visiting Shirdi, one experiences complete peace of mind, a strong self-confidence, and a great sense of purpose. During his contemplation (Samadhi) services, Shri Saibaba had consoled his devotees with these words - \\\"After I take Samadhi, my bones will speak from the grave, and people will throng here.\\\" His message is being experienced till today.\\n        Shirdi is a convenient place to visit throughout the year, during all seasons. Baba's Shirdi is one place where even today all his devotees come with empty hands but filled with Hope, and go back \\\"Blessed with Contentment with an Everlasting Smile on their faces\\\".\\n      </p>\\n    </div>\\n  </body>\\n</html>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html>\\n<head>\\n<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n<style>\\nbody {\\n  font-family: \\\"Lato\\\", sans-serif;\\n}\\n\\n.sidenav {\\n  height: 100%;\\n  width: 160px;\\n  position: inherit;\\n  z-index: 1;\\n  top: 0;\\n  left: 0;\\n  background-color: #111;\\n  overflow-x: hidden;\\n  padding-top: 20px;\\n}\\n\\n.sidenav a {\\n  padding: 6px 8px 6px 16px;\\n  text-decoration: none;\\n  font-size: 25px;\\n  color: #818181;\\n  display: block;\\n}\\n\\n.sidenav a:hover {\\n  color: #f1f1f1;\\n}\\n\\n.main {\\n  margin-left: 160px; /* Same as the width of the sidenav */\\n  font-size: 28px; /* Increased text to enable scrolling */\\n  padding: 0px 10px;\\n}\\n\\n@media screen and (max-height: 450px) {\\n  .sidenav {padding-top: 15px;}\\n  .sidenav a {font-size: 18px;}\\n}\\n</style>\\n</head>\\n<body>\\n    <div class=\\\"main\\\" style=\\\"text-align: start\\\">\\n        <span style=\\\"background-color:  mediumseagreen;\\\">Welcome </span> <span style=\\\"color: red; text-decoration-line: underline;background-color: mediumseagreen\\\">{{this.email}}</span>\\n    </div>  \\n    \\n<div class=\\\"sidenav\\\">\\n  <a routerLink=\\\"/admin/getuser\\\">User List</a>\\n  <a routerLink=\\\"/admin/bookedslots\\\">Booked Slots</a>\\n  <a routerLink=\\\"#\\\">Find Users</a>\\n  <a routerLink=\\\"#\\\">Queries</a>\\n</div>\\n\\n</body>\\n</html> \\n\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../admin/admin.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  data:any;\n  user:Object;//??????????\n  name:any;\nemail;\n  constructor(public router:Router,public service:AdminService) {\n\n   if(sessionStorage['role']=='USER') \n    this.router.navigate(['userdashboard']);\n    \n    this.data=sessionStorage['email']\n    this.email=sessionStorage.getItem('email')\n    console.log(this.email)\n\n    if(this.data==undefined)\n    this.router.navigate(['login']);\n\n    this.service.getUserByEmail(this.data).subscribe((res)=>{\n      console.log(res);\n      this.user=res;\n      this.name=res['name'];\n      sessionStorage['id']=res['userId'];\n    },\n    err=>{console.log(err)}\n    )\n  \n   }\n\n\n\n\n  ngOnInit() {\n    this.service.getUsers().subscribe((res)=>{\n      console.log(res);\n      this.user = res;\n   })\n  }\n\n  logout()\n  {\n    delete sessionStorage['email'];\n    this.router.navigate(['login']);\n    delete sessionStorage['id'];\n  }\n\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  getList(id: any) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  constructor(public http:HttpClient) { }\n\n  getUserByEmail(email)\n  {\n    return this.http.get(\"http://13.232.8.110:8080/DacAug19/admin/getuser?email=\"+email);\n  }\n\n  getUsers()\n  {\n    return this.http.get(\"http://13.232.8.110:8080/DacAug19/admin/getuser\"); \n  }\n\n  changeStatus(id)\n  {\n    return this.http.post(\"http://13.232.8.110:8080/DacAug19/admin/changestatus?id=\"+id,null);\n  }\n\n  getBookedSlots()\n  {\n    return this.http.get(\"http://13.232.8.110:8080/DacAug19/admin/bookedslots\");\n  }\n\n  getBookedSlotList(uid)\n  {\n    return this.http.get(\"http://13.232.8.110:8080/DacAug19/user/bookinglist?uid=\"+uid);\n  }\n}\n","module.exports = \".counter {\\n    counter-reset: serial-number; \\n  }\\n  \\n  .counter td:first-child:before {\\n    counter-increment: serial-number; \\n    content: counter(serial-number); \\n  }\"","module.exports = \"\\n<h3 style=\\\"align-self: center; color: brown; text-align: center; text-decoration-line: underline\\\">Booked Slots</h3>  \\n\\n<div><a style=\\\"color: blue; text-decoration-line: underline; margin-left: 20px\\\"   routerLink=\\\"/admin\\\" >Previous</a></div>\\n&nbsp;\\n&nbsp;\\n&nbsp;\\n\\n<div class=\\\"table-responsive\\\">\\n  <table  class=\\\"table table-hover counter\\\">\\n    <thead style=\\\"background-color:rgb(155, 153, 153); color:black\\\">\\n      <tr>\\n        <th>Sr. No.</th>\\n        <th>First Name</th>\\n        <th>Last Name</th>\\n        <th>Mobile</th>\\n        <th>Email</th>\\n        <th>Booked slots</th>\\n\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let u of user\\\">\\n        <td></td>\\n        <td >{{u.firstName}}</td>\\n        <td>{{u.lastName}}</td>\\n        <td>{{u.mobileNo}}</td>\\n        <td>{{u.email}}</td>\\n        <td routerLink=\\\"/admin/getlist\\\" style=\\\"color: blue; text-decoration-line: underline\\\" (click)=\\\"getBookedSlotList(u.userId)\\\">More details. . .</td>\\n        <!-- <ng-container *ngIf=\\\"u.darshanBooking\\\">        \\n        <td>{{u.darshanBooking[0].noOfPeople}}</td>   \\n        <td>{{u.darshanBooking[0].date | date:\\\"dd/MM/yyyy\\\"}}</td>\\n        <td>{{u.darshanBooking[0].slot}}</td>\\n\\n        <td>{{u.darshanBooking[1].noOfPeople}}</td>   \\n        <td>{{u.darshanBooking[1].date | date:\\\"dd/MM/yyyy\\\"}}</td>\\n        <td>{{u.darshanBooking[1].slot}}</td>\\n      </ng-container>   -->\\n      <!-- <ng-container *ngIf=\\\"!u.darshanBooking\\\">        \\n        <td>0</td>\\n        <td>0</td>\\n        <td>0</td>   \\n      </ng-container>   -->\\n      </tr>\\n      <div style=\\\"color: blue;\\\"  >\\n        {{msg}}\\n      </div>\\n\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../admin.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../user.service';\n\n@Component({\n  selector: 'app-bookedslots',\n  templateUrl: './bookedslots.component.html',\n  styleUrls: ['./bookedslots.component.css']\n})\nexport class BookedslotsComponent implements OnInit {\n\n  data:any;\n  msg:string;\n  flag:any;\n  user:any;\n  fname:any;\n\n  constructor(public service:AdminService,public uservice:UserService,public router:Router ) {\n    // this.data=sessionStorage['email']\n\n    // if(this.data==undefined)\n    // this.router.navigate(['login'])\n\n  \n   }\n\n   getBookedSlotList(id)\n   {\n     sessionStorage['bid']=id;\n    console.log(id); \n   }\n\n   getUsers()\n   {\n     this.service.getBookedSlots().subscribe((res)=>{\n       console.log(res);\n       this.user=res;\n       \n     })\n   }\n\n\n  ngOnInit() {\n\n    console.log(\"in getUsers\");\n\n    this.service.getUsers().subscribe((res)=>{\n      this.user=res;\n    })\n    // this.service.getUsers.subscribe((res)=>{\n    //    console.log(\"jijij\");\n    //   this.service = res;\n    // })\n  }\n\n  changeStatus(status)\n  {\n    console.log(status);\n    this.service.changeStatus(status).subscribe((result)=>{\n      if(result){\n        this.msg=\"status changes successfully\";\n      }\n      else\n      {\n        this.msg=\"status failed to change\";\n      }\n    },\n    error=>{console.log(error);}\n    )\n    this.router.navigate(['bookedslots'])\n  }\n\n\n}\n\n","module.exports = \".counter {\\n    counter-reset: serial-number; \\n  }\\n  \\n  .counter td:first-child:before {\\n    counter-increment: serial-number; \\n    content: counter(serial-number); \\n  }\"","module.exports = \"\\n<h3 style=\\\"align-self: center;\\\">Slots Booked by User</h3>  \\n\\n<div><a style=\\\"color: blue;\\\" routerLink=\\\"/admin/bookedslots\\\">Previous</a></div>\\n&nbsp;\\n&nbsp;\\n\\n<div class=\\\"table-responsive\\\">\\n  <table  class=\\\"table table-hover counter\\\">\\n    <thead style=\\\"background-color: rgb(155, 153, 153)\\\">\\n      <tr>\\n        <th>Sr. No.</th>\\n        <th>Booking Id</th>\\n        <th>No Of People</th>\\n        <th>Date</th>\\n        <th>Slot</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let u of user\\\">\\n        <td></td>\\n        <td>{{u.darshanId}}</td>\\n        <td>{{u.noOfPeople}}</td>\\n        <td>{{u.date | date:\\\"dd/MM/yyyy\\\"}}</td>\\n        <td>{{u.slot}}</td>        \\n      </tr>\\n      <div style=\\\"color: blue;\\\"  >\\n        {{msg}}\\n      </div>\\n\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../admin.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-getlist',\n  templateUrl: './getlist.component.html',\n  styleUrls: ['./getlist.component.css']\n})\nexport class GetlistComponent implements OnInit {\n\n  user:any;\n  data:any;\n  id:any;\n  email:any;\n  constructor(public service: AdminService, public router:Router) \n  {\n    this.data=sessionStorage['email']\n    this.id=sessionStorage['bid']\n    if(this.data==undefined)\n    this.router.navigate(['login'])\n\n\n    this.service.getBookedSlotList(this.id).subscribe((res)=>{\n      console.log(\"IN GETlist\");\n      console.log(res);\n      this.user=res;\n    })\n  }\n\n  \n  \n  ngOnInit() {\n\n    console.log(\"in getList\");\n\n    this.service.getBookedSlotList(this.id).subscribe((res)=>{\n      \n      this.user=res;\n    })    \n  }\n}\n","module.exports = \".counter{\\n    counter-reset: serial-number;\\n}\\n\\n.counter td:first-child:before{\\n    counter-increment: serial-number;\\n    content: counter(serial-number);\\n}\"","module.exports = \"\\n<h3 style=\\\"align-self: center;\\\">User List</h3>  \\n\\n<div><a style=\\\"color: blue;\\\" routerLink=\\\"/admin\\\">Previous</a></div>\\n&nbsp;\\n&nbsp;\\n\\n<div class=\\\"table-responsive\\\">\\n  <table  class=\\\"table table-hover counter\\\">\\n    <thead style=\\\"background-color:rgb(155, 153, 153); color:black\\\">\\n      <tr>\\n        <th>Sr. No.</th>\\n        <th>User Id</th>\\n        <th>Name</th>\\n        <th>Mobile</th>\\n        <th>Email</th>\\n        <th>Toggle status</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let u of user\\\">\\n        <td></td>\\n        <td>{{u.userId}}</td>\\n        <td>{{u.firstName}}</td>\\n        <td>{{u.mobileNo}}</td>\\n        <td>{{u.email}}</td>        \\n        <td><a style=\\\"color: blue;\\\"  (click)=\\\"changeStatus(u.userId)\\\" *ngIf=\\\"u.status\\\"  href=\\\"/getuser\\\" > enable </a>\\n        <a style=\\\"color: blue;\\\"  (click)=\\\"changeStatus(u.userId)\\\" *ngIf=\\\"!u.status\\\"  href=\\\"/getuser\\\" > disable </a></td>\\n      </tr>\\n      <div style=\\\"color: blue;\\\"  >\\n        {{msg}}\\n      </div>\\n\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n import { AdminService } from '../admin.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-getuser',\n  templateUrl: './getuser.component.html',\n  styleUrls: ['./getuser.component.css']\n})\nexport class GetuserComponent implements OnInit {\n\n  data:any;\n  msg:string;\n  flag:any;\n  user:any;\n\n  constructor(public service:AdminService,public router:Router ) {\n    this.data=sessionStorage['email']\n\n    if(this.data==undefined)\n    this.router.navigate(['login'])\n  \n   }\n\n\n   getBookedSlots()\n   {\n     this.service.getBookedSlots().subscribe((res)=>{\n       console.log(res);\n       this.user=res;\n     })\n   }\n\n\n  ngOnInit() {\n\n    console.log(\"in getBookedSlots\");\n\n    this.service.getBookedSlots().subscribe((res)=>{\n      this.user=res;\n    })\n    // this.service.getUsers.subscribe((res)=>{\n    //    console.log(\"jijij\");\n    //   this.service = res;\n    // })\n  }\n\n  changeStatus(status)\n  {\n    console.log(status);\n    this.service.changeStatus(status).subscribe((result)=>{\n      if(result){\n        this.msg=\"status changes successfully\";\n      }\n      else\n      {\n        this.msg=\"status failed to change\";\n      }\n    },\n    error=>{console.log(error);}\n    )\n    this.router.navigate(['getBookedSlots'])\n  }\n\n\n}\n","module.exports = \"/* Style the navigation bar */\\n.navbar {\\n    width: 100%;\\n    background-color: #555;\\n    overflow: auto;\\n  }\\n/* Navbar links */\\n.navbar a {\\n    float: left;\\n    text-align: center;\\n    padding: 12px;\\n    color: white;\\n    text-decoration: none;\\n    font-size: 17px;\\n  }\\n/* Navbar links on mouse-over */\\n.navbar a:hover {\\n    background-color: #000;\\n  }\\n/* Current/active navbar link */\\n.active {\\n    background-color: rgb(212, 95, 27);\\n  }\\n/* Add responsiveness - will automatically display the navbar vertically instead of horizontally on screens less than 500 pixels */\\n@media screen and (max-width: 500px) {\\n    .navbar a {\\n      float: none;\\n      display: block;\\n    }\\n  }\\n/* Right-aligned section inside the top navigation */\\n.topnav-right {\\n    float: right;\\n  }\"","module.exports = \"<h1 style=\\\"text-align: center;color: black; background-color: orange\\\">Welcome to Sai Darshan Website</h1>\\n\\n<!-- Load an icon library -->\\n<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\">\\n\\n<div class=\\\"navbar\\\">\\n  <a *ngIf=\\\"!isLogin\\\" class=\\\"active\\\" routerLink=\\\"/home\\\"><i class=\\\"fa fa-fw fa-user\\\"></i> Home</a>\\n  <ng-container *ngIf=\\\"isLogin\\\">\\n    <a *ngIf=\\\"!isRole\\\" class=\\\"active\\\" routerLink=\\\"/userdashboard\\\"><i class=\\\"fa fa-fw fa-user\\\"></i> Home</a>\\n    <a *ngIf=\\\"isRole\\\" class=\\\"active\\\" routerLink=\\\"/admin\\\"><i class=\\\"fa fa-fw fa-user\\\"></i> Home</a>\\n  </ng-container>\\n  <a routerLink=\\\"/about\\\"><i class=\\\"fa fa-fw fa-search\\\"></i> About us </a>\\n  <a routerLink=\\\"/contact\\\"><i class=\\\"fa fa-fw fa-envelope\\\"></i> Contact us </a>\\n  <!-- <a *ngIf=\\\"isLogin==true\\\" class=\\\"fa-user\\\" routerLink=\\\"/admin/getuser\\\"><i class=\\\"fa fa-fw fa-user\\\"></i> User List</a> -->\\n  <!-- <a *ngIf=\\\"isLogin==true\\\" class=\\\"fa-user\\\" routerLink=\\\"/booking\\\"><i class=\\\"fa fa-fw fa-user\\\"></i> Darshan Booking</a>  -->\\n\\n  <!-- <a routerLink=\\\"/login\\\"><i class=\\\"fa fa-fw fa-envelope\\\"></i> Login</a>\\n  <a routerLink=\\\"/signup\\\"><i class=\\\"fa fa-fw fa-user\\\"></i> Register</a> -->\\n  <div class=\\\"topnav-right\\\">\\n    <!-- <a routerLink=\\\"/login\\\" ><i class=\\\"fa fa-fw fa-user\\\"></i>Login</a> -->\\n    <li *ngIf=\\\"!isLogin\\\">\\n      <a routerLink=\\\"/login\\\">Login</a>\\n    </li>\\n\\n    <li *ngIf=\\\"isLogin\\\">\\n      <a (click)=\\\"logout()\\\">Logout</a>\\n    </li>\\n    <!-- <li *ngIf=\\\"isLogin\\\">\\n    <a routerLink=\\\"/profile\\\">Update Profile</a>\\n</li> -->\\n    <li *ngIf=\\\"!isLogin\\\">\\n      <a routerLink=\\\"/register\\\"><i class=\\\"fa fa-fw fa-envelope\\\"></i>Register Here</a>\\n    </li>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\\n<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\">\\n\\n<div class=\\\"navbar\\\">\\n\\n  <a routerLink=\\\"/about\\\"><i class=\\\"fa fa-fw fa-search\\\"></i> About us </a>\\n  <a routerLink=\\\"/contact\\\"><i class=\\\"fa fa-fw fa-search\\\"></i> Contact us </a>\\n  <a routerLink=\\\"/\\\"><i class=\\\"fa fa-fw fa-home\\\"></i> How to reach? </a>\\n  <!-- <a routerLink=\\\"/admin\\\"><i class=\\\"fa fa-fw fa-search\\\"></i> Admin Dashboard </a> -->\\n</div>\"","import { Component } from '@angular/core';\nimport { EmtrService } from './emtr.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Test';\n\n  isLogin;\n  isRole:boolean;\n  //userLoggedIn;\n  \n  \n\n  constructor(private emservice:EmtrService,private router:Router){\n        {      \n          if(JSON.parse(sessionStorage.getItem(\"isLogin\")) === true)\n          this.isLogin = true;\n          else\n          this.isLogin = false;\n        }   \n          \n        // {\n        //   if(JSON.parse(sessionStorage.getItem(\"userLoggedIn\")) ===true)\n        //   this.userLoggedIn = true;\n        //   else\n        //   this.userLoggedIn=false;\n        // }\n\n  }\n\n  ngOnInit() {\n\n    this.emservice.getEmmitedValueForLogbtnSwitch()\n      .subscribe(item => this.isLogin=item);\n\n      if(sessionStorage.role == \"ADMIN\")\n      this.isRole= true\n      else\n      this.isRole= false\n      // debugger\n      // this.emservice.getEmmitedValueForRoleStatusSwitch()\n      // .subscribe(item=>this.userLoggedIn=item);\n  }\n\n  logout(){\n    alert(\"In logout\");\n    this.isLogin=false;\n    delete sessionStorage['email'];\n    delete sessionStorage['userId'];\n    delete sessionStorage['role'];\n    delete sessionStorage['isLogin'];\n    delete sessionStorage['id'];\n    delete sessionStorage['rolestatus'];\n    delete sessionStorage['userLoggedIn'];\n    delete sessionStorage['adminLoggedIn'];\n    this.router.navigate(['login'])\n\n  }\n\n  isAdmin()\n  {      \n\n    if(sessionStorage.role == \"ADMIN\")\n    return true\n    else\n    return false\n  }\n  \n\n}\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule  } from '@angular/router';\nimport { FormsModule  } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { AboutComponent } from './about/about.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { UserdashboardComponent } from './userdashboard/userdashboard.component';\nimport { ForgetpassComponent } from './forgetpass/forgetpass.component';\nimport { SetpassComponent } from './setpass/setpass.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { GetuserComponent } from './admin/getuser/getuser.component';\nimport { BookingComponent } from './booking/booking.component';\nimport { BookedslotsComponent } from './admin/bookedslots/bookedslots.component';\nimport { GetbookedlistComponent } from './getbookedlist/getbookedlist.component';\nimport { GetlistComponent } from './admin/getlist/getlist.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ContactComponent,\n    AboutComponent,\n\n    LoginComponent,\n    SignupComponent,\n    ProfileComponent,\n    UserdashboardComponent,\n    ForgetpassComponent,\n    SetpassComponent,\n    AdminComponent,\n    GetuserComponent,\n    BookingComponent,\n    BookedslotsComponent,\n    GetbookedlistComponent,\n    GetlistComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent},\n      {path: 'home',component:HomeComponent },\n     \n      {path:'forgot',component:ForgetpassComponent},\n      {path:'setpass',component:SetpassComponent},\n      {path: 'about',component:AboutComponent },\n      {path: 'contact',component:ContactComponent },\n      {path: 'login',component:LoginComponent},\n      {path: 'register',component:SignupComponent},\n      {path: 'profile',component:ProfileComponent},\n      {path: 'userdashboard',component:UserdashboardComponent},\n      {path: 'admin',component:AdminComponent},\n      {path: 'admin/getuser',component:GetuserComponent},\n      {path: 'admin/bookedslots',component:BookedslotsComponent},\n      {path: 'admin/getlist',component:GetlistComponent},\n      {path: 'booking',component:BookingComponent},\n      {path: 'getbookedlist',component:GetbookedlistComponent}\n\n    ])\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","module.exports = \"* {box-sizing: border-box}\\n\\n/* Full-width input fields */\\n\\ninput[type=text], input[type=password] {\\n  width: 100%;\\n  padding: 15px;\\n  margin: 5px 0 22px 0;\\n  display: inline-block;\\n  border: none;\\n  background: #f1f1f1;\\n}\\n\\ninput[type=text]:focus, input[type=password]:focus {\\n  background-color: #ddd;\\n  outline: none;\\n}\\n\\nhr {\\n  border: 1px solid #f1f1f1;\\n  margin-bottom: 25px;\\n}\\n\\n/* Set a style for all buttons */\\n\\nbutton {\\n  background-color: rgb(202, 101, 6);\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n  width: 100%;\\n  opacity: 0.9;\\n}\\n\\nbutton:hover {\\n  opacity:1;\\n}\\n\\n/* Extra styles for the cancel button */\\n\\n.cancelbtn {\\n  padding: 14px 20px;\\n  background-color: #f44336;\\n}\\n\\n/* Float cancel and signup buttons and add an equal width */\\n\\n.cancelbtn, .signupbtn {\\n  float: left;\\n  width: 50%;\\n}\\n\\n/* Add padding to container elements */\\n\\n.container {\\n  padding: 16px;\\n}\\n\\n/* Clear floats */\\n\\n.clearfix::after {\\n  content: \\\"\\\";\\n  clear: both;\\n  display: table;\\n}\\n\\n/* Avatar image */\\n\\nimg.avatar {\\n    width: 15%;\\n    border-radius: 50%;\\n  }\\n\\n/* Center the avatar image inside this container */\\n\\n.imgcontainer {\\n    text-align: center;\\n    margin: 24px 0 12px 0;\\n    \\n  }\\n\\n/* Change styles for cancel button and signup button on extra small screens */\\n\\n@media screen and (max-width: 300px) {\\n  .cancelbtn, .signupbtn {\\n    width: 100%;\\n  }\\n}\"","module.exports = \"<form #bookingForm=\\\"ngForm\\\" (ngSubmit)=\\\"booking(bookingForm)\\\" role=\\\"form\\\" style=\\\"border:1px solid #ccc\\\" ngNativeValidate method=\\\"POST\\\">\\n  <div class=\\\"imgcontainer\\\">\\n    <img src=\\\"../../assets/images/saibaba.jpg\\\" alt=\\\"Avatar\\\" class=\\\"avatar\\\">\\n  </div>\\n  <div class=\\\"container\\\">\\n    <h1 style=\\\"text-align: center;\\\">Booking</h1>\\n    <hr>\\n    <div class=\\\"table-responsive\\\" >\\n      <table class=\\\"table table-hover\\\" >\\n        <tbody>\\n            <tr>\\n                <td hidden>\\n                    <input type=\\\"number\\\"   name=\\\"userId\\\" [(ngModel)]=\\\"data\\\" class=\\\"form-control\\\" id=\\\"\\\" hidden>\\n                </td>\\n          <tr>\\n            <td>\\n                <label for=\\\"date\\\"><b>Date</b></label>\\n                <input type=\\\"date\\\"   name=\\\"date\\\" ngModel class=\\\"form-control\\\"  required>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>    \\n                <label for=\\\"noOfPeople\\\"><b>No of persons</b></label>\\n                <input type=\\\"number\\\" placeholder=\\\"Enter no of person\\\" name=\\\"noOfPeople\\\" ngModel class=\\\"form-control\\\" id=\\\"\\\" min=\\\"1\\\" max=\\\"6\\\" required>\\n          \\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n                <label for=\\\"slot\\\"><b>Slot</b>&nbsp;</label>\\n                <select id=\\\"slot\\\" ngModel  name=\\\"slot\\\" class=\\\"form-control\\\">\\n                    <option value=\\\"SLOT1\\\" >SLOT1</option>\\n                     <option value=\\\"SLOT2\\\">SLOT2</option>\\n                  </select>       \\n            </td>\\n           \\n          </tr>\\n          \\n        </tbody>\\n      </table>\\n    </div>\\n    <div class=\\\"clearfix\\\">\\n      <button type=\\\"submit\\\" class=\\\"next\\\">Next</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css']\n})\n\nexport class BookingComponent implements OnInit {\n  data:any;\n  em:any;\n\n\n  constructor(public service:UserService,public router:Router) {\n    this.data=sessionStorage['userId'];\n    this.em=sessionStorage['email'];\n\n    if(this.em==undefined)\n    this.router.navigate(['login'])\n    //console.log(this.data.sessionStorage.userId);\n   }\n\n   booking(bookingForm)\n   {\n     let data=bookingForm.form.value;\n     let x={\n       \"user\":{\"userId\":data.userId},\"date\":data.date,\"noOfPeople\":data.noOfPeople,\"slot\":data.slot\n     }\n     console.log(x);\n     this.service.booking(x).subscribe((res)=>{\n       this.router.navigate(['getbookedlist']);\n     },(error)=>{\n       alert(\"something went wrong!!!\");\n     })\n   }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"body, html {\\n    height: 50%;\\n    width: 60%;\\n    margin-left: 20%;\\n    \\n  }\\n  .bg {\\n\\n    height: 50%;\\n\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    background-size: cover;\\n  }\"","module.exports = \"\\n<body>\\n\\n    <div class=\\\"bg\\\">\\n      \\n      <img src=\\\"../../assets/images/sai.jpg\\\" class=\\\"img-responsive\\\" alt=\\\"Image\\\">\\n      \\n    </div>\\n    &nbsp;\\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n    <h2 style=\\\"color: red\\\">Email : </h2><h3>saidarshan@gmail.com</h3>\\n    &nbsp;\\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n    <h2 style=\\\"color: red\\\">Contact No. : </h2><h3>+91 9021686812</h3>\\n    <!-- <p class=\\\"py-5 text-center\\\"></p> -->\\n\\n</body>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(public http: HttpClient) \n  {\n\n  }\n\n  GetData()\n  {\n   return this.http.get(\"http://13.232.8.110/employees\");\n  }\n\n  AddData(emp:any)\n  {\n    return this.http.post(\"http://13.232.8.110/employees\",\n                          emp);\n  }\n\n  Delete(no:any)\n  {\n    return this.http.delete(\"http://13.232.8.110/employees/\"+no);\n  }\n  \nGetDataById(no)\n{\n  return this.http.get(\"http://13.232.8.110/employees/\"+no);\n}  \n\n\nUpdate(emp){\n\nreturn this.http.put(\"http://13.232.8.110/employees/\" +emp.no,emp);\n\n}\n}\n\n\n","import { Injectable, Output } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmtrService {\n\n  @Output() fire: EventEmitter<any>=new EventEmitter();\n  constructor() { }\n\n  logInBtnSwitch(value){\n    this.fire.emit(value);\n  }\n\n  getEmmitedValueForLogbtnSwitch()\n  {\n    return this.fire;\n  }\n\n  // roleStatusSwitch(value){\n  //   this.fire.emit(value);\n  // }\n\n  // getEmmitedValueForRoleStatusSwitch()\n  // {\n  //   return this.fire;\n  // }\n}\n","module.exports = \"\"","module.exports = \"<!-- #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"getotp(myForm.value)\\\" -->\\n\\n<div>\\n  <form   role=\\\"form\\\" style=\\\" margin-left: 30%\\\">\\n    <legend style=\\\"text-align: inherit; color: red; text-decoration-line: underline\\\">Enter registered email</legend>\\n  \\n    <div  class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input [(ngModel)]=\\\"name\\\" style=\\\"width: 300px;\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"xyz@mail.com\\\">\\n    </div>\\n  \\n    <button type=\\\"button\\\"  (click)=\\\"getotp(name)\\\" class=\\\"btn btn-warning\\\" style=\\\"color: black;\\\">Get OTP</button>\\n  \\n    <div style=\\\"color:red;\\\">{{msg}}</div>\\n  \\n  \\n  </form>\\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgetpass',\n  templateUrl: './forgetpass.component.html',\n  styleUrls: ['./forgetpass.component.css']\n})\nexport class ForgetpassComponent implements OnInit {\n\n  msg:String = \"\";\n  constructor(public service:UserService,public router:Router) { }\n\n  ngOnInit() {\n  }\n\n  getotp(data: string)\n  {\n    console.log(data);\n    if(data == undefined){alert(\"Pls enter email id\");}\n    this.service.GetOtp(data).subscribe((result:string)=>{\n      this.msg=\"password changed!!!\";\n      // sessionStorage.setItem(\"passwordgenerated\",JSON.stringify(true));\n      //console.log(this.msg);\n    },\n    error=>{ \n      if(error.status===200){\n      this.router.navigate(['setpass']);\n    }\n    else{\n      this.msg=\"pls Enter valid email\";\n      }\n    })\n    sessionStorage['passwordgenerated']=1;\n\n  }\n\n}\n","module.exports = \".counter{\\n    counter-reset: serial-number;\\n}\\n\\n.counter td:first-child:before{\\n    counter-increment: serial-number;\\n    content: counter(serial-number);\\n}\"","module.exports = \"\\n<h3 style=\\\"align-self: center; text-align: center; color: red; text-decoration-line: underline;\\\">Booked Slots</h3>  \\n\\n<div><a style=\\\"color: blue; text-decoration-line: underline; margin-left:20px \\\" routerLink=\\\"/userdashboard\\\">Previous</a></div>\\n&nbsp;\\n&nbsp;\\n\\n<div class=\\\"table-responsive\\\">\\n  <table  class=\\\"table table-hover counter\\\">\\n    <thead style=\\\"background-color: rgb(155, 153, 153)\\\">\\n      <tr>\\n        <th>Sr. No.</th>\\n        <th>Booking Id</th>\\n        <th>No Of People</th>\\n        <th>Date</th>\\n        <th>Slot</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let u of user\\\">\\n        <td></td>\\n        <td>{{u.darshanId}}</td>\\n        <td>{{u.noOfPeople}}</td>\\n        <td>{{u.date | date:\\\"dd/MM/yyyy\\\"}}</td>\\n        <td>{{u.slot}}</td>        \\n      </tr>\\n      <div style=\\\"color: blue;\\\"  >\\n        {{msg}}\\n      </div>\\n\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-getbookedlist',\n  templateUrl: './getbookedlist.component.html',\n  styleUrls: ['./getbookedlist.component.css']\n})\nexport class GetbookedlistComponent implements OnInit {\n\n  user:any;\n  data:any;\n  id:any;\n\n  constructor(public service: UserService, public router:Router) \n  {\n    this.data=sessionStorage['email']\n    this.id=sessionStorage['userId']\n    if(this.data==undefined)\n    this.router.navigate(['login'])\n  }\n\n  \n  getBookedList()\n  {\n    this.service.getBookedList(this.id).subscribe((res)=>{\n      console.log(res);\n      this.user=res;\n    })\n  }\n\n  ngOnInit() {\n\n    console.log(\"in getBookedList\");\n\n    this.service.getBookedList(this.id).subscribe((res)=>{\n      \n      this.user=res;\n    })    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  \\n  <title>Sai darshan</title>\\n  <h1> Welcome To Sai Darshan</h1>\\n</head>\\n<body>\\n     <div> \\n    <img src=\\\"../../assets/images/wp3991264-sai-baba-wallpapers.jpg\\\" style=\\\"align-items: center;\\\" width=\\\"100%\\\" height=\\\"700px\\\" >\\n  </div>\\n</body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  \n  employees ;\n\n  constructor(public router: Router, public service:DataService) \n  {\n   this.GetData(); \n  }\n\n\n\n  GetData()\n  {\n    let StateOfResult= this.service.GetData();\n\n    StateOfResult.subscribe((result)=>{\n      this.employees = result;\n    });\n  }\n\n  ngOnInit() \n  {\n    \n    \n    // this.employees = [\n    //   {no : 11, name: \"mahesh1\", address: \"pune\"}employeesemployeesemployeesemployeesemployeesemployees,\n    //   {no : 12, name: \"mahesh2\", address: \"panji\"},\n    //   {no : 13, name: \"mahesh3\", address: \"mumbai\"}\n    // ];\n  }\n\n  GoToRegister()\n  {\n   this.router.navigate(['register']); \n  }\n\n\n  Delete(no){\n    //alert(no);\n    this.service.Delete(no).subscribe((response)=>{\n      console.log(response);\n      this.GetData();\n    })\n\n\n  }\n\n}","module.exports = \"/* Bordered form */\\nform {\\n    border: 3px solid #f1f1f1;\\n  }\\n/* Full-width inputs */\\ninput[type=text], input[type=password] {\\n    width: 100%;\\n    padding: 12px 20px;\\n    margin: 8px 0;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    box-sizing: border-box;\\n  }\\n/* Set a style for all buttons */\\nbutton {\\n    background-color: rgb(168, 179, 243);\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n    width: 100%;\\n  }\\n/* Add a hover effect for buttons */\\nbutton:hover {\\n    opacity: 0.8;\\n  }\\n/* Extra style for the cancel button (red) */\\n.cancelbtn {\\n    width: auto;\\n    padding: 10px 18px;\\n    background-color: #f44336;\\n  }\\n/* Center the avatar image inside this container */\\n.imgcontainer {\\n    text-align: center;\\n    margin: 24px 0 12px 0;\\n    \\n  }\\n/* Avatar image */\\nimg.avatar {\\n    width: 15%;\\n    border-radius: 50%;\\n  }\\n/* Add padding to containers */\\n.container {\\n    padding: 16px;\\n  }\\n/* The \\\"Forgot password\\\" text */\\nspan.psw {\\n    float: right;\\n    padding-top: 16px;\\n  }\\n/* Change styles for span and cancel button on extra small screens */\\n@media screen and (max-width: 300px) {\\n    span.psw {\\n      display: block;\\n      float: none;\\n    }\\n    .cancelbtn {\\n      width: 100%;\\n    }\\n  }\\n/* Style all input fields */\\ninput {\\n    width: 100%;\\n    padding: 12px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n    margin-top: 6px;\\n    margin-bottom: 16px;\\n  }\\n/* Style the submit button */\\ninput[type=submit] {\\n    background-color: rgb(165, 4, 4);\\n    color: white;\\n  }\\n/* Style the container for inputs */\\n.container {\\n    background-color: #f1f1f1;\\n    padding: 20px;\\n  }\\n  \\n\"","module.exports = \"\\n<form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm)\\\" role=\\\"form\\\">\\n  <div class=\\\"imgcontainer\\\">\\n    <img src=\\\"../../assets/images/saibaba.jpg\\\" alt=\\\"Avatar\\\" class=\\\"avatar\\\">\\n  </div>\\n\\n  <div class=\\\"container\\\">\\n    <label for=\\\"email\\\"><b>Email</b></label>\\n    <input type=\\\"email\\\" ngModel name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Enter Username\\\"  required>\\n\\n    <label for=\\\"password\\\"><b>Password</b></label>\\n    <input type=\\\"password\\\"  ngModel name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"\\\" placeholder=\\\"Enter Password\\\" required >\\n\\n    <button type=\\\"submit\\\" style=\\\"color: black\\\">Login</button>\\n    <label>\\n      <input type=\\\"checkbox\\\" checked=\\\"checked\\\" name=\\\"remember\\\"> Remember me\\n    </label>\\n  </div>\\n\\n  <div class=\\\"container\\\" style=\\\"background-color:#f1f1f1\\\">\\n    <!-- <button type=\\\"button\\\" class=\\\"cancelbtn\\\">Cancel</button> -->\\n    &nbsp;&nbsp;&nbsp;\\n    <!-- <span class=\\\"psw\\\">Forgot <a href=\\\"#\\\">password?</a></span> -->\\n    <a routerLink=\\\"/forgot\\\" style=\\\"color: red\\\"><i class=\\\"password?\\\"></i>Forgot Password</a>\\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n    <a routerLink=\\\"/register\\\">Doesn't have an Account ?   Register here.</a>\\n  </div>\\n</form>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport {EmtrService} from '../emtr.service';\nimport { stringify } from '@angular/core/src/util';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  msg:string;\n  constructor(private userService:UserService,\n    private router:Router,private emService:EmtrService) {\n      delete sessionStorage['passwordgenerated'];\n     }\n\n    login(loginForm)\n    {\n      let data=loginForm.form.value;\n      this.userService.login(data).subscribe(res=>{\n        sessionStorage['email']=res['email'];\n        console.log(res['userId']);\n        sessionStorage['userId']=res['userId'];\n        sessionStorage['role']=res['role'];\n        this.emService.logInBtnSwitch(true);\n        sessionStorage.setItem(\"isLogin\",JSON.stringify(true));\n        if(res['role']===\"USER\")\n        {\n        //this.emService.roleStatusSwitch(true);\n        //sessionStorage.setItem(\"userLoggedIn\",JSON.stringify(true));\n        //sessionStorage.setItem(\"adminLoggedIn\",JSON.stringify(false));\n        this.router.navigate(['userdashboard']);\n        }\n        else \n        {\n        //this.emService.roleStatusSwitch(false);\n        //sessionStorage.setItem(\"userLoggedIn\",JSON.stringify(false));\n        //sessionStorage.setItem(\"adminLoggedIn\",JSON.stringify(true));\n        this.router.navigate(['admin']);\n        }\n      },(err)=>{\n        alert(\"email and password does not match!!!\")\n      })\n    }\n    \n  ngOnInit() {\n  }\n\n}\n","module.exports = \"* {box-sizing: border-box}\\n\\n/* Full-width input fields */\\n\\ninput[type=text], input[type=password] {\\n  width: 100%;\\n  padding: 15px;\\n  margin: 5px 0 22px 0;\\n  display: inline-block;\\n  border: none;\\n  background: #f1f1f1;\\n}\\n\\ninput[type=text]:focus, input[type=password]:focus {\\n  background-color: #ddd;\\n  outline: none;\\n}\\n\\nhr {\\n  border: 1px solid #f1f1f1;\\n  margin-bottom: 25px;\\n}\\n\\n/* Set a style for all buttons */\\n\\nbutton {\\n  background-color: rgb(202, 101, 6);\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n  width: 100%;\\n  opacity: 0.9;\\n}\\n\\nbutton:hover {\\n  opacity:1;\\n}\\n\\n/* Extra styles for the cancel button */\\n\\n.cancelbtn {\\n  padding: 14px 20px;\\n  background-color: #f44336;\\n}\\n\\n/* Float cancel and signup buttons and add an equal width */\\n\\n.cancelbtn, .signupbtn {\\n  float: left;\\n  width: 50%;\\n}\\n\\n/* Add padding to container elements */\\n\\n.container {\\n  padding: 16px;\\n}\\n\\n/* Clear floats */\\n\\n.clearfix::after {\\n  content: \\\"\\\";\\n  clear: both;\\n  display: table;\\n}\\n\\n/* Avatar image */\\n\\nimg.avatar {\\n    width: 15%;\\n    border-radius: 50%;\\n  }\\n\\n/* Center the avatar image inside this container */\\n\\n.imgcontainer {\\n    text-align: center;\\n    margin: 24px 0 12px 0;\\n    \\n  }\\n\\n/* Change styles for cancel button and signup button on extra small screens */\\n\\n@media screen and (max-width: 300px) {\\n  .cancelbtn, .signupbtn {\\n    width: 100%;\\n  }\\n}\"","module.exports = \"<form #profileForm=\\\"ngForm\\\" (ngSubmit)=\\\"profile(profileForm)\\\" role=\\\"form\\\" style=\\\"border:1px solid #ccc\\\" ngNativeValidate method=\\\"POST\\\">\\n  <div class=\\\"imgcontainer\\\">\\n    <img src=\\\"../../assets/images/saibaba.jpg\\\" alt=\\\"Avatar\\\" class=\\\"avatar\\\">\\n  </div>\\n  <div class=\\\"container\\\">\\n    <h1 style=\\\"text-align: center;\\\">Profile</h1>\\n    <p style=\\\"text-align: center;\\\">Complete your Profile first</p>\\n    <hr>\\n<!-- {{data}} -->\\n    <div class=\\\"table-responsive\\\" >\\n      <table class=\\\"table table-hover\\\" >\\n        <tbody>\\n          <tr>\\n            <td>\\n                <label for=\\\"email\\\"><b>Email</b></label>\\n                <input type=\\\"email\\\"   name=\\\"email\\\" [(ngModel)]=\\\"data\\\" class=\\\"form-control\\\" id=\\\"\\\" readonly>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>    \\n                <label for=\\\"firstname\\\"><b>First Name</b></label>\\n                <input type=\\\"text\\\" placeholder=\\\"Enter First name\\\" name=\\\"firstName\\\" ngModel class=\\\"form-control\\\" id=\\\"\\\" required>\\n            </td>\\n            \\n              <td> \\n                <label for=\\\"middlename\\\"><b>Middle Name</b></label>\\n                <input type=\\\"text\\\" placeholder=\\\"Enter Middle name\\\" name=\\\"middleName\\\" ngModel class=\\\"form-control\\\" id=\\\"\\\" required>\\n            </td>\\n            <td>\\n              <label for=\\\"lastname\\\"><b>Last Name</b></label>\\n              <input type=\\\"text\\\" placeholder=\\\"Enter Last name\\\" name=\\\"lastName\\\" ngModel class=\\\"form-control\\\" id=\\\"\\\" required>\\n            </td>\\n            </tr>\\n            <tr>\\n            <!-- <td>\\n              <label for=\\\"mobile\\\"><b>Mobile Number</b></label>\\n              <input type=\\\"text\\\" placeholder=\\\"Enter Mobile number\\\" name=\\\"mobile\\\" ngModel class=\\\"form-control\\\" id=\\\"\\\" required>\\n            </td> -->\\n            <td>\\n                <label for=\\\"dob\\\"><b>Date Of Birth</b></label>\\n                <input type=\\\"date\\\" placeholder=\\\"Enter Date of birth\\\" name=\\\"dob\\\" ngModel class=\\\"form-control\\\" id=\\\"\\\" required>\\n            </td>\\n            <td>\\n                <label for=\\\"gender\\\"><b>Gender</b>&nbsp;</label>\\n                <select id=\\\"gender\\\" ngModel  name=\\\"gender\\\" class=\\\"form-control\\\">\\n                    <option value=\\\"MALE\\\" >Male</option>\\n                     <option value=\\\"FEMALE\\\">Female</option>\\n                    <option value=\\\"OTHER\\\">Other</option>\\n                  </select>       \\n            </td>\\n           \\n          </tr>\\n          <tr>\\n            <!-- <td>\\n            <label for=\\\"country\\\"><b>Country</b>&nbsp;</label>\\n            <select id=\\\"country\\\" ngModel value=\\\"India\\\" name=\\\"country\\\" class=\\\"form-control\\\">\\n                <option value=\\\"India\\\">India</option> \\n              </select>  \\n            </td> -->\\n            <td>\\n              <label for=\\\"role\\\"><b>Role</b>&nbsp;</label>\\n              <select id=\\\"\\\" ngModel  name=\\\"role\\\" class=\\\"form-control\\\">\\n                  <option value=\\\"USER\\\" >USER</option>\\n                </select>       \\n          </td>\\n            <td>\\n              <label for=\\\"state\\\"><b>state</b>&nbsp;</label>\\n              <select name=\\\"state\\\" ngModel id=\\\"state\\\" class=\\\"form-control\\\">\\n              <option value=\\\"Maharashtra\\\">Maharashtra</option>\\n              <option value=\\\"Andhra Pradesh\\\">Andhra Pradesh</option>\\n              <option value=\\\"Andaman and Nicobar Islands\\\">Andaman and Nicobar Islands</option>\\n              <option value=\\\"Arunachal Pradesh\\\">Arunachal Pradesh</option>\\n              <option value=\\\"Assam\\\">Assam</option>\\n              <option value=\\\"Bihar\\\">Bihar</option>\\n              <option value=\\\"Chandigarh\\\">Chandigarh</option>\\n              <option value=\\\"Chhattisgarh\\\">Chhattisgarh</option>\\n              <option value=\\\"Dadar and Nagar Haveli\\\">Dadar and Nagar Haveli</option>\\n              <option value=\\\"Daman and Diu\\\">Daman and Diu</option>\\n              <option value=\\\"Delhi\\\">Delhi</option>\\n              <option value=\\\"Lakshadweep\\\">Lakshadweep</option>\\n              <option value=\\\"Puducherry\\\">Puducherry</option>\\n              <option value=\\\"Goa\\\">Goa</option>\\n              <option value=\\\"Gujarat\\\">Gujarat</option>\\n              <option value=\\\"Haryana\\\">Haryana</option>\\n              <option value=\\\"Himachal Pradesh\\\">Himachal Pradesh</option>\\n              <option value=\\\"Jammu and Kashmir\\\">Jammu and Kashmir</option>\\n              <option value=\\\"Jharkhand\\\">Jharkhand</option>\\n              <option value=\\\"Karnataka\\\">Karnataka</option>\\n              <option value=\\\"Kerala\\\">Kerala</option>\\n              <option value=\\\"Madhya Pradesh\\\">Madhya Pradesh</option>\\n              <option value=\\\"Maharashtra\\\">Maharashtra</option>\\n              <option value=\\\"Manipur\\\">Manipur</option>\\n              <option value=\\\"Meghalaya\\\">Meghalaya</option>\\n              <option value=\\\"Mizoram\\\">Mizoram</option>\\n              <option value=\\\"Nagaland\\\">Nagaland</option>\\n              <option value=\\\"Odisha\\\">Odisha</option>\\n              <option value=\\\"Punjab\\\">Punjab</option>\\n              <option value=\\\"Rajasthan\\\">Rajasthan</option>\\n              <option value=\\\"Sikkim\\\">Sikkim</option>\\n              <option value=\\\"Tamil Nadu\\\">Tamil Nadu</option>\\n              <option value=\\\"Telangana\\\">Telangana</option>\\n              <option value=\\\"Tripura\\\">Tripura</option>\\n              <option value=\\\"Uttar Pradesh\\\">Uttar Pradesh</option>\\n              <option value=\\\"Uttarakhand\\\">Uttarakhand</option>\\n              <option value=\\\"West Bengal\\\">West Bengal</option>\\n              </select>\\n          </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div class=\\\"clearfix\\\">\\n      <button type=\\\"submit\\\" class=\\\"next\\\">Next</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  data:any;\n\n  constructor(public service:UserService,public router:Router) { \n    this.data=sessionStorage['email'];\n    console.log(this.data);\n  }\n  profile(profileForm)\n{\n  let data=profileForm.form.value;\n  console.log(data);\n  this.service.profile(data).subscribe((res)=>{\n    this.router.navigate(['userdashboard']);\n  },(error)=>{\n    alert(\"wrong\")\n\n  })\n}\n\n\n\n  ngOnInit() {\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div>\\n  <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"updatepass(myForm.value)\\\" role=\\\"form\\\" style=\\\" margin-left: 30%\\\">\\n<legend style=\\\"text-align: inherit; color: red; text-decoration-line: underline\\\">Change password</legend>\\n\\n<div class=\\\"form-group\\\">\\n  <label for=\\\"\\\">OTP</label>\\n  <input ngModel style=\\\"width: 300px;\\\" type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"otp\\\"  id=\\\"\\\" placeholder=\\\"123465\\\" minlength=\\\"6\\\" maxlength=\\\"\\\" required>\\n</div>\\n\\n<div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">New password</label>\\n    <input required=\\\"required\\\" ngModel style=\\\"width: 300px;\\\"  type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"\\\" minlength=\\\"6\\\" >\\n  </div>\\n<button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n</form>\\n<br>\\n<span *ngIf=\\\"!flag\\\" style=\\\"color: red; text-align: center\\\">{{msg}}</span>\\n<a *ngIf=\\\"flag\\\" style=\\\"color: blue;text-align: center\\\"  (click)=\\\"navigate()\\\" >{{msg}} <br> Goto login page  </a>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-setpass',\n  templateUrl: './setpass.component.html',\n  styleUrls: ['./setpass.component.css']\n})\nexport class SetpassComponent implements OnInit {\nmsg:string;\nflag:boolean;\nd:any;\n  constructor(public service:UserService,public router:Router) {\n    this.d=sessionStorage.getItem['passwordgenerated']\n  if(this.d==0)\n    this.router.navigate(['login'])\n   }\n\n  ngOnInit() {\n  }\n\n\n  updatepass(data)\n  {\n    this.service.setpass(data).subscribe((result)=>{\n      console.log(result);\n      if(result){\n        this.msg=\"successfully changed password\";\n        this.flag=true;\n        this.router.navigate(['login']);\n      }\n      else{\n        this.flag=false\n        this.msg=\"Enter valid OTP\";\n      }\n    })\n    console.log(data);\n  }\n\n  navigate()\n  {\n\n    this.router.navigate(['login']);\n  }\n\n}\n","module.exports = \"* {box-sizing: border-box}\\n\\n/* Full-width input fields */\\n\\ninput[type=text], input[type=password] {\\n  width: 100%;\\n  padding: 15px;\\n  margin: 5px 0 22px 0;\\n  display: inline-block;\\n  border: none;\\n  background: #f1f1f1;\\n}\\n\\ninput[type=text]:focus, input[type=password]:focus {\\n  background-color: #ddd;\\n  outline: none;\\n}\\n\\nhr {\\n  border: 1px solid #f1f1f1;\\n  margin-bottom: 25px;\\n}\\n\\n/* Set a style for all buttons */\\n\\nbutton {\\n  background-color: #4CAF50;\\n  color: white;\\n  padding: 14px 20px;\\n  margin: 8px 0;\\n  border: none;\\n  cursor: pointer;\\n  width: 100%;\\n  opacity: 0.9;\\n}\\n\\nbutton:hover {\\n  opacity:1;\\n}\\n\\n/* Extra styles for the cancel button */\\n\\n.cancelbtn {\\n  padding: 14px 20px;\\n  background-color: #f44336;\\n}\\n\\n/* Float cancel and signup buttons and add an equal width */\\n\\n.cancelbtn, .signupbtn {\\n  float: left;\\n  width: 50%;\\n}\\n\\n/* Add padding to container elements */\\n\\n.container {\\n  padding: 16px;\\n}\\n\\n/* Clear floats */\\n\\n.clearfix::after {\\n  content: \\\"\\\";\\n  clear: both;\\n  display: table;\\n}\\n\\n/* Avatar image */\\n\\nimg.avatar {\\n    width: 15%;\\n    border-radius: 50%;\\n  }\\n\\n/* Center the avatar image inside this container */\\n\\n.imgcontainer {\\n    text-align: center;\\n    margin: 24px 0 12px 0;\\n    \\n  }\\n\\n/* Change styles for cancel button and signup button on extra small screens */\\n\\n@media screen and (max-width: 300px) {\\n  .cancelbtn, .signupbtn {\\n    width: 100%;\\n  }\\n}\"","module.exports = \"<form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"register(myForm.form.value)\\\" role=\\\"form\\\" style=\\\"border:1px solid #ccc\\\" ngNativeValidate method=\\\"POST\\\">\\n  <div class=\\\"imgcontainer\\\">\\n    <img src=\\\"../../assets/images/wp3991264-sai-baba-wallpapers.jpg\\\" alt=\\\"Avatar\\\" class=\\\"avatar\\\">\\n  </div>\\n  <div class=\\\"container\\\">\\n    <h1>Sign Up</h1>\\n    <p>Please fill in this form to create an account.</p>\\n    <hr>\\n\\n    <label for=\\\"email\\\"><b>Email</b></label>\\n    <input type=\\\"email\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"data\\\" class=\\\"form-control\\\" id=\\\"\\\" required>\\n\\n    <label for=\\\"psw\\\"><b>Password</b></label>\\n    <input type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"password\\\" ngModel class=\\\"form-control\\\" id=\\\"\\\" required minlength=\\\"6\\\">\\n\\n    <!-- <label for=\\\"psw-repeat\\\"><b>Repeat Password</b></label>\\n    <input type=\\\"password\\\" placeholder=\\\"Repeat Password\\\" name=\\\"psw-repeat\\\" required> -->\\n    <label for=\\\"mobile\\\"><b>Mobile Number</b></label>\\n    <input type=\\\"tel\\\" ngModel name=\\\"mobileNo\\\" placeholder=\\\"Mobile\\\" class=\\\"form-control\\\" required=\\\"required\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\">\\n\\n    <!-- <input type=\\\"hidden\\\" value=\\\"USER\\\"  ngModel  name=\\\"role\\\" class=\\\"form-control\\\" id=\\\"\\\" > -->\\n\\n    \\n\\n    <label>\\n      <input type=\\\"checkbox\\\" checked=\\\"checked\\\" name=\\\"remember\\\" style=\\\"margin-bottom:15px\\\"> Remember me\\n    </label>\\n\\n    <div class=\\\"clearfix\\\">\\n      <button type=\\\"button\\\" (click)=\\\"cnclbtn()\\\" class=\\\"cancelbtn\\\">Cancel</button>\\n      <button type=\\\"submit\\\" class=\\\"signupbtn\\\">Sign Up</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  data;any;\n  constructor(private userService:UserService,\n    private router:Router) { }\nregister(User: { role: string; })\n{\n  User.role = \"USER\";\n  console.log(User);\n  this.userService.register(User).subscribe((res)=>{\n    this.router.navigate(['login']);\n  },(error)=>{\n    alert(\"wrong\")\n\n  })\n}\n\ncnclbtn()\n{\n  this.router.navigate(['login']); \n}\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private htttp:HttpClient) { }\n\n  register(user)\n  {\n    return this.htttp.post(\"http://13.232.8.110:8080/DacAug19/user/register\",user)\n  }\n\n  login(user)\n  {\n    return this.htttp.post(\"http://13.232.8.110:8080/DacAug19/user/login\",user)\n  }\n  profile(user)\n  {\n    return this.htttp.post(\"http://13.232.8.110:8080/DacAug19/user/profile\",user)\n  }\n\n\n  forgot(user)\n  {\n    return this.htttp.post(\"http://13.232.8.110:8080/DacAug19/user/forgot/\",user);\n  }\n\n  GetOtp(email:string)\n  {\n    console.log(email.toString())\n    return this.htttp.post(\"http://13.232.8.110:8080/DacAug19/user/forgot/\"+email,null);\n  }\n\n  setpass(data)\n  {\n    return this.htttp.post(\"http://13.232.8.110:8080/DacAug19/user/setpass/\",data);\n  }\n\n  booking(book)\n  {\n    return this.htttp.post(\"http://13.232.8.110:8080/DacAug19/user/booking/\",book);\n  }\n\n  getBookedList(uid)\n  {\n    return this.htttp.get(\"http://13.232.8.110:8080/DacAug19/user/bookinglist?uid=\"+uid);\n  }\n}\n","module.exports = \"\"","module.exports = \"<!DOCTYPE html>\\n<html>\\n<head>\\n<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n<style>\\nbody {\\n  font-family: \\\"Lato\\\", sans-serif;\\n}\\n\\n.sidenav {\\n  height: 100%;\\n  width: 160px;\\n  position: inherit;\\n  z-index: 1;\\n  top: 0;\\n  left: 0;\\n  background-color: #111;\\n  overflow-x: hidden;\\n  padding-top: 20px;\\n}\\n\\n.sidenav a {\\n  padding: 6px 8px 6px 16px;\\n  text-decoration: none;\\n  font-size: 25px;\\n  color: #818181;\\n  display: block;\\n}\\n\\n.sidenav a:hover {\\n  color: #f1f1f1;\\n}\\n\\n.main {\\n  margin-left: 160px; /* Same as the width of the sidenav */\\n  font-size: 28px; /* Increased text to enable scrolling */\\n  padding: 0px 10px;\\n}\\n\\n@media screen and (max-height: 450px) {\\n  .sidenav {padding-top: 15px;}\\n  .sidenav a {font-size: 18px;}\\n}\\n</style>\\n</head>\\n<body>\\n    <div class=\\\"main\\\" style=\\\"text-align: start\\\">\\n        <span style=\\\"background-color:  mediumseagreen;\\\">Welcome </span> <span style=\\\"color: red; text-decoration-line: underline;background-color: mediumseagreen\\\">{{this.email}}</span>\\n    </div> \\n<div class=\\\"sidenav\\\">\\n  <a routerLink=\\\"/booking\\\">Darshan Booking</a>\\n  <a routerLink=\\\"/getbookedlist\\\">Booked Slots</a>\\n  <a routerLink=\\\"/profile\\\">Update Profile</a>\\n  <a routerLink=\\\"#\\\">Queries</a>\\n</div>\\n\\n<div class=\\\"main\\\">\\n</div>  \\n\\n</body>\\n</html> \\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-userdashboard',\n  templateUrl: './userdashboard.component.html',\n  styleUrls: ['./userdashboard.component.css']\n})\nexport class UserdashboardComponent implements OnInit {\n  \n  email:any;\n  constructor(public router:Router,public service:UserService) {\n    if(sessionStorage['role']=='ADMIN') \n    this.router.navigate(['admin']);\n    this.email=sessionStorage.getItem('email')\n    console.log(this.email)\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}